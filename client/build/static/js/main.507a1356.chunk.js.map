{"version":3,"sources":["utils/API/index.js","components/MergeImages/index.js","components/Avatar/index.js","components/Races/index.js","components/EditAvatar/index.js","components/AvatarCard/index.js","components/MythCreator/index.js","components/MythCard/index.js","components/Myths/index.js","pages/Profile.js","pages/Login.js","pages/SignUp.js","pages/World.js","App.js","reportWebVitals.js","index.js"],"names":["API","login","email","characterName","axios","method","url","data","getProfile","userId","saveProfile","post","updateProfile","put","getUsers","get","getUser","id","updateAvatar","img1","img2","createUser","createMyth","title","body","MergeImages","props","Card","Img","variant","src","AvatarMaker","imgSrc","Race","elf","name","weapons","img","human","dwarf","EditAvatar","useState","btnText","setBtnText","show","setShow","handleClose","setImg1","setImg2","isSelectingRace","setIsSelectingRace","races","raceChoice","setRaceChoice","sessionStorage","getItem","useEffect","then","res","Button","size","onClick","Modal","onHide","Header","closeButton","Title","Body","Container","Row","className","map","race","Col","selectedRace","weapon","console","log","selectedWeapon","Footer","onSave","AvatarCard","setImgSrc","mergeImages","b64","style","width","Avatar","ListGroup","ListGroupItem","MythCreator","setMythTitle","setBody","Form","Group","as","controlId","Label","column","sm","Control","onChange","e","target","value","type","placeholder","span","offset","MythCard","Text","Myths","myths","setMyths","myth","Profile","Login","setEmail","setCharacterName","to","setItem","SignUp","catch","err","World","Check","label","App","Switch","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.507a1356.chunk.js","sourcesContent":["import axios from \"axios\";\n\n\nconst API = {\n \n  login: function(email, characterName) {\n    return axios({\n      method: 'post',\n      url: '/api/login',\n      data: {\n        email,\n        characterName\n      }\n    })\n  },\n  getProfile: function(userId) {\n    return axios({\n      method: 'post',\n      url: '/api/profile',\n      data: {\n        userId\n      }\n    });\n  },\n  saveProfile: function() {\n    return axios.post(\"/api/profile\");\n  },\n  updateProfile: function() {\n    return axios.put(\"/api/profile\");\n  },\n  getUsers: function(){\n    return axios.get(\"/api/users\")\n  },\n  getUser: function(id){\n    return axios.get(\"/api/users/\" + id)\n  },\n  updateAvatar: function(id, img1, img2){\n    return axios({\n      method: 'put',\n      url: \"/api/users/\" + id,\n      data: {\n        img1,\n        img2\n      }\n    })\n  },\n  createUser: function(email, characterName){\n    return axios({\n      method: 'post',\n      url: 'api/users',\n      data: {\n      email,\n      characterName\n      }\n    });\n  },\n  createMyth: function(userId, title, body){\n    return axios({\n      method: 'post',\n      url: '/api/myth',\n      data: {\n        userId,\n        title,\n        body\n      }\n    })\n  }\n\n};\n\nexport default API","import {React, useState, useEffect} from \"react\"\nimport mergeImages from \"merge-images\"\nimport Card from \"react-bootstrap/Card\"\n\nfunction MergeImages(props){\n\n\n    return(\n      \n        <Card.Img variant=\"top\" src={props.src} />\n    )\n}\n\nexport default MergeImages","import { React, useEffect, useState } from \"react\";\n// import Card from \"react-bootstrap/Card\"\nimport mergeImages from \"merge-images\"\nimport API from \"../../utils/API/index\"\nimport MergeImages from \"../MergeImages/index\"\n\n\nfunction AvatarMaker(props) {\n  \n\n    return(\n        <MergeImages src={props.imgSrc}/>\n        )\n}\n\nexport default AvatarMaker;","const Race = {\n\n\n    elf: {\n        name: \"Elf\",\n        img1: \"../images/templates/Races/Elf/Base-Elf.png\",\n        weapons: [\n            {\n                name: \"sword\",\n                img: \"../images/templates/Races/Elf/Elf-Sword.png\"\n            },\n            {\n                name: \"axe\",\n                img: \"../images/templates/Races/Elf/Elf-Axe.png\"\n            },\n            {\n                name: \"bow\",\n                img: \"../images/templates/Races/Elf/Elf-Bow-and-Quiver.png\"\n            },\n        ]\n    },\n    human: {\n        name: \"Human\",\n        img1: \"../images/templates/Races/Human/Base-Human.png\",\n        weapons: [\n            {\n                name: \"Sword\",\n                img: \"../images/templates/Races/Human/Human-Sword.png\"\n            },\n            {\n                name: \"Axe\",\n                img: \"../images/templates/Races/Human/Human-Axe.png\"\n            },\n            {\n                name: \"Bow\",\n                img: \"../images/templates/Races/Human/Human-Bow-and-Quiver.png\"\n            }\n        ]\n    },\n    dwarf: {\n        name: \"Dwarf\",\n        img1: \"../images/templates/Races/Dwarf/Base-Dwarf.png\",\n        weapons: [\n            {\n                name: \"Sword\",\n                img: \"../images/templates/Races/Dwarf/Dwarf-Sword.png\"\n            },\n            {\n                name: \"Axe\",\n                img: \"../images/templates/Races/Dwarf/Dwarf-Axe.png\"\n            },\n            {\n                name: \"Bow\",\n                img: \"../images/templates/Races/Dwarf/Dwarf-Bow-and-Quiver.png\"\n            }\n        ]\n    }\n}\n\nexport default Race","import { React, useState, useEffect } from \"react\"\nimport { Button, Modal, Container, Row, Col } from \"react-bootstrap\"\nimport API from \"../../utils/API/index\"\nimport Race from \"../Races/index\";\n\n\n\nfunction EditAvatar(props) {\n    const [btnText, setBtnText] = useState(\"Edit Avatar\")\n\n    const [show, setShow] = useState(false)\n\n    const handleClose = () => setShow(false)\n    const handleShow = () => setShow(true)\n\n    const [img1, setImg1] = useState()\n    const [img2, setImg2] = useState()\n\n    const [isSelectingRace, setIsSelectingRace] = useState(true)\n\n    const races = [Race.human, Race.elf, Race.dwarf]\n    const [raceChoice, setRaceChoice] = useState()\n\n    const id = sessionStorage.getItem(\"userId\")\n\n    const logRace = () => {\n        console.log(img2)\n        API.updateAvatar(id, img1, img2)\n        .then(res => {\n            console.log(res)\n            handleClose()\n            props.onSave(res.data.img1, res.data.img2)\n            setIsSelectingRace(true)\n        })\n    }\n\n    const selectedRace = (race) => {\n        setImg1(race.img1)\n        setRaceChoice(race)\n        setIsSelectingRace(false)\n    }\n\n    const selectedWeapon = (weapon) => {\n        console.log(weapon)\n        setImg2(weapon.img)\n        \n    }\n\n    useEffect(() => {\n        API.getUser(id)\n            .then(res => {\n                if (!res.data.img1 && !res.data.img2) {\n                    setBtnText(\"Create Avatar\")\n                }\n            })\n        }, [id])\n\n    return (\n        <>\n            <Button size=\"sm\" variant=\"primary\" onClick={handleShow}>{btnText}</Button>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Avatar Editor</Modal.Title>\n                    <Modal.Body>Choose your Race:\n                    <br></br>\n                    </Modal.Body> \n                    { isSelectingRace ? (\n                        <Container>\n                            <Row className=\"justify-content-around\">\n                                {races.map(race => {\n                                    return(\n                                    <Col key={race.name}>\n                                    <Button onClick={() => selectedRace(race)}>{race.name}</Button>\n                                    </Col>\n                                )\n                                })}\n                                \n                                \n                            </Row>\n                        </Container>\n                    )\n                    :\n                    (\n                        <Container>\n                            <Row className=\"justify-content-around\">\n                            {raceChoice.weapons.map(weapon => {\n                                    return(\n                                    <Col key={weapon.name}>\n                                    <Button onClick={() => selectedWeapon(weapon)}>{weapon.name}</Button>\n                                    </Col>\n                                )\n                                })}\n                            </Row>\n                        </Container>)\n                    }\n                </Modal.Header>\n                <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={logRace}>\n            Save\n          </Button>\n        </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default EditAvatar","import {React, useEffect, useState} from 'react';\nimport Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\nimport Avatar from \"../Avatar\"\nimport EditAvatar from \"../EditAvatar/index\"\nimport API from \"../../utils/API/index\"\nimport mergeImages from \"merge-images\"\n\nconst AvatarCard = () => {\n\n  const onAvatarSave = (img1, img2) => {\n    mergeImages([img1, img2])\n            .then(b64 => setImgSrc(b64))\n  }\n\n  const [imgSrc, setImgSrc] = useState(\"\")\n  const id = sessionStorage.getItem(\"userId\")\n\n  useEffect(() => {\n\n    API.getUser(id)\n        .then(res => {\n            if(!res.data.img1 && !res.data.img2){\n               \n                return\n            }\n\n            mergeImages([res.data.img1, res.data.img2])\n            \n                .then(b64 => setImgSrc(b64))\n        })\n\n}, [id])\n\n  return (\n    <>\n    <EditAvatar onSave={onAvatarSave}></EditAvatar>\n    <Card style={{ width: '18rem' }}>\n      \n      <Avatar  imgSrc={imgSrc}/>\n      <ListGroup className=\"list-group-flush\">\n      <h1>{sessionStorage.getItem(\"characterName\")}</h1>\n        <ListGroupItem>Strength:</ListGroupItem>\n        <ListGroupItem>Endurance:</ListGroupItem>\n        <ListGroupItem>Speed:</ListGroupItem>\n      </ListGroup>\n\n    </Card>\n    </>\n  );\n}\n\nexport default AvatarCard;\n\n\n\n\n\n","import {React, useState} from \"react\"\nimport {Form, Button, Row, Col } from \"react-bootstrap\"\nimport API from \"../../utils/API/index\"\n\nconst MythCreator = () => {\n\n    const [title, setMythTitle] = useState();\n    const [body, setBody] = useState()\n\n    const userId = sessionStorage.getItem(\"userId\")\n\n    function createMyth() {\n        API.createMyth(userId, title, body)\n        .then(res => {\n            console.log(\"new myth\", res)\n        })\n    }\n\n    return(\n        <>\n        <Form>\n            <Form.Group as={Row} controlId=\"formHorizontalTitle\">\n                <Form.Label column sm={0}>\n                    Myth Title\n                </Form.Label>\n\n                <Col sm={10}>\n                    <Form.Control onChange={(e) => setMythTitle(e.target.value)}\n                    type=\"mythTitle\"\n                    placeholder=\"Myth Title\"\n                    />\n                </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"formHorizontalBody\">\n                <Form.Label column sm={0}>\n                    Myth Body\n                </Form.Label>\n\n                <Col sm={10}>\n                    <Form.Control onChange={(e) => setBody(e.target.value)}\n                    type=\"mythBody\"\n                    placeholder=\"Myth Body\"\n                    />\n                </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n                <Col sm={{ span: 10, offset: 2 }}>\n                    <Button onClick={createMyth} type=\"submit\">Create Myth</Button>\n                </Col>\n            </Form.Group>\n\n\n        </Form>\n        </>\n    )\n}\n\nexport default MythCreator","import React from \"react\"\nimport Card from \"react-bootstrap/Card\"\n\nfunction MythCard(props) {\n\n    return (\n        <>\n            <Card.Body>\n                <Card.Title>{props.title}</Card.Title>\n                <Card.Text>{props.body}</Card.Text>\n            </Card.Body>\n        </>\n\n    )\n}\n\nexport default MythCard","import { React, useState, useEffect } from \"react\"\nimport API from \"../../utils/API/index\"\nimport MythCard from \"../../components/MythCard/index\"\nimport Card from \"react-bootstrap/Card\"\n\nfunction Myths() {\n\n    const [myths, setMyths] = useState([])\n\n    const getProfile = () => {\n\n        const userId = sessionStorage.getItem(\"userId\")\n        API.getProfile(userId)\n            .then(res => {\n                setMyths(res.data)\n            })\n    }\n\n    useEffect(() => {\n        getProfile()\n    }, [])\n\n    return (\n        <div>\n            {myths.map(myth => (\n            <Card key={myth.id} className=\"col-md-6\" style={{ width: '18rem' }}>\n                    <MythCard className=\"col-md-6\"\n                        title={myth.title}\n                        body={myth.body}\n                    />\n            </Card>\n                ))}\n        </div>\n    )\n\n}\n\nexport default Myths","import React from 'react';\nimport AvatarCard from '../components/AvatarCard/index';\nimport MythCreator from '../components/MythCreator/index'\nimport Myths from \"../components/Myths/index\"\n\n\n\nconst Profile = () => {\n \n\n    return (\n    <div>\n        <AvatarCard></AvatarCard>\n        <MythCreator></MythCreator>\n        <Myths></Myths>\n        \n    </div>\n  );\n}\n\nexport default Profile;","import {React, useState} from 'react';\nimport { Card, Form, Button, Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport API from \"../utils/API/index\"\n\nconst Login = () => {\n\n  const [email, setEmail] = useState();\n  const [characterName, setCharacterName] = useState()\n\n  const checkDB = (e) => {\n    API.login(email, characterName)\n    .then(res => {\n      sessionStorage.setItem(\"characterName\", res.data.characterName)\n      sessionStorage.setItem(\"userId\", res.data.id)\n    })\n  }\n\n  return (\n    <>\n      <Card className=\"container\">\n\n        <Card.Body>\n          <h2 className=\"text-center\">Log In</h2>\n          <Form>\n\n            <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n              <Form.Label column sm={2}>\n                Email\n              </Form.Label>\n              <Col sm={10}>\n                <Form.Control onChange={(e) => setEmail(e.target.value)} type=\"email\" placeholder=\"Email\" />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n              <Form.Label column sm={2}>\n                Character Name\n              </Form.Label>\n              <Col sm={10}>\n                <Form.Control onChange={(e) => setCharacterName(e.target.value)} type=\"characterName\" placeholder=\"Character Name\" />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Col sm={{ span: 10, offset: 2 }}>\n                <Link to=\"/profile\">\n                  <Button onClick={checkDB} type=\"submit\">Log in</Button>\n                </Link>\n              </Col>\n            </Form.Group>\n          </Form>\n\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center label\">\n        Don't Have an account? <Link to=\"/signup\">Sign Up here</Link>\n\n      </div>\n\n    </>\n  );\n}\n\nexport default Login;","import { React, useState } from \"react\";\nimport { Card, Form, Button, Row, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport API from \"../utils/API/index\"\n\nconst SignUp = () => {\n  \n  \n  const [email, setEmail] = useState();\n  const [characterName, setCharacterName] = useState();\n\n  const setSession = () => {\n\n    API.createUser(email, characterName)\n    .then(res => {\n      console.log(res.data)\n      sessionStorage.setItem(\"userId\", res.data)\n      sessionStorage.setItem(\"charName\", characterName)\n    }).catch(err => console.log(err))\n  }\n\n\n\n  return (\n    <>\n      <Card className=\"container\">\n        <Card.Body>\n          <h2 className=\"text-center\">Sign Up</h2>\n          <Form>\n              <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n                <Form.Label column sm={0}>\n                  Email\n                </Form.Label>\n\n                <Col sm={10}>\n                  <Form.Control onChange={(e) => setEmail(e.target.value)} type=\"email\" placeholder=\"Email\" />\n                </Col>\n              </Form.Group>\n\n              <Form.Group as={Row} controlId=\"formHorizontalCharacterName\">\n                <Form.Label column sm={0}>\n                  Character Name\n                </Form.Label>\n\n                <Col sm={10}>\n                  <Form.Control onChange={(e) => setCharacterName(e.target.value)}\n                    type=\"characterName\"\n                    placeholder=\"Character Name\"\n                  />\n                </Col>\n              </Form.Group>\n\n              <Form.Group as={Row}>\n                <Col sm={{ span: 10, offset: 2 }}>\n                  <Link to=\"/profile\">\n                    <Button onClick={setSession} type=\"submit\">Sign in</Button>\n                  </Link>\n                </Col>\n              </Form.Group>\n          </Form>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center label\">\n        Already have an account? <Link to=\"/login\">Log in</Link>\n      </div>\n    </>\n  );\n};\n\nexport default SignUp;\n","import React from 'react';\nimport {Card, Form, Button, Row, Col} from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\n      \nconst World = () => {\n          return (\n          <>\n          <Card className=\"container\">\n            \n            <Card.Body>\n              <h2 className=\"text-center\">Sign Up</h2>\n              <Form>\n              <Form>\n        <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n          <Form.Label column sm={0}>\n            Email\n          </Form.Label>\n          <Col sm={10}>\n            <Form.Control type=\"email\" placeholder=\"Email\" />\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row} controlId=\"formPassword\">\n          <Form.Label column sm={2}>\n            Password\n          </Form.Label>\n          <Col sm={10}>\n            <Form.Control type=\"password\" placeholder=\"Password\" />\n          </Col>\n        </Form.Group>\n      \n        <Form.Group as={Row} controlId=\"formHorizontalCheck\">\n          <Col sm={{ span: 10, offset: 2 }}>\n            <Form.Check label=\"Remember me\" />\n          </Col>\n        </Form.Group>\n      \n        <Form.Group as={Row}>\n          <Col sm={{ span: 10, offset: 2 }}>\n           <Link to=\"/profile\">\n           <Button type=\"submit\">Sign in</Button>\n           </Link> \n          </Col>\n        </Form.Group>\n      </Form>\n              </Form>\n      \n            </Card.Body>\n          </Card>\n             <div className=\"w-100 text-center\">\n               Already have an account? <Link to=\"/login\">Log in</Link>\n      \n            </div>\n              \n          </>\n        );\n      }\n\n\nexport default World;","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Profile from \"./pages/Profile\";\nimport Login from \"./pages/Login\";\nimport SignUp from \"./pages/SignUp\";\nimport Switch from \"react-bootstrap/esm/Switch\";\nimport World from \"./pages/World\";\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/signup\" component={SignUp} />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/profile\" component={Profile} />\n        <Route exact path=\"/world\" component={World} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}